plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.openapi.generator' version '7.6.0'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jacoco {
	toolVersion = "0.8.12"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}

	classDirectories.setFrom(
			fileTree(
					dir: layout.buildDirectory.dir("classes/java/main").get().asFile,
					include: ["**/*.class"]
			)
	)
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			classDirectories.setFrom(
					fileTree(
							dir: layout.buildDirectory.dir("classes/java/main").get().asFile,
							include: ["**/*.class"],
							exclude: ["**/*Application.class", "**/config/**", "com/example/demo/generated/api/**", "com/example/demo/generated/model/**'"],

					)
			)
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

repositories { mavenCentral() }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

openApiGenerate {
	generatorName = 'spring'
	inputSpec = "$projectDir/src/main/resources/swagger/poll-api.yaml"
	outputDir = layout.buildDirectory.dir("generated").get().asFile.path
	apiPackage = 'com.example.demo.generated.api'
	modelPackage = 'com.example.demo.generated.model'
	invokerPackage = 'com.example.demo.generated.invoker'
	configOptions = [
			interfaceOnly    : 'true',
			useSpringBoot3   : 'true',
			dateLibrary      : 'java8',
			useTags          : 'true',
			useLombok        : 'true',
			serializableModel: 'true'
	]
}

sourceSets {
	main {
		java.srcDir(layout.buildDirectory.dir("generated/src/main/java"))
	}
}

tasks.compileJava.dependsOn tasks.openApiGenerate
